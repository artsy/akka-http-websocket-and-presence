---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: scala-times1-web
  namespace: default
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: scala-times1
        component: web
        layer: application
      name: scala-times1-web
    spec:
      containers:
      - name: scala-times1-web
        envFrom:
        - configMapRef:
            name: scala-times1-environment
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/scala-times1:staging
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: scala-times1
    component: web
    layer: application
  name: scala-times1-web
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: scala-times1
    component: web
    layer: application
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: scala-times1
    component: web
    layer: application
  name: scala-times1-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
spec:
  ports:
    - port: 443
      protocol: TCP
      name: https
      targetPort: 8080
  selector:
    app: scala-times1
    layer: application
    component: web
  sessionAffinity: None
  type: LoadBalancer